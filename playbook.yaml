- name: Tooling
  hosts: localhost
  vars:
    ansible_connection: local
    ansible_python_interpreter: "{{ ansible_playbook_python }}"

  tasks:
    - name: Install taps via homebrew
      community.general.homebrew_tap:
        name: "{{ item }}"
        state: present
      with_items:
        - homebrew/cask-fonts

    - name: Install fonts via homebrew
      community.general.homebrew_cask:
        name: "{{ item }}"
        state: present
      with_items:
        - font-symbols-only-nerd-font
      ignore_errors: true

    - name: Install dev apps via homebrew
      community.general.homebrew_cask:
        name: "{{ item }}"
        state: present
      with_items:
        # terminals
        - fig
        - iterm2
        - warp
        # IDEs
        - jetbrains-toolbox
        - visual-studio-code
        - dbeaver-community
        # keybindings
        - karabiner-elements

    - name: Install common apps via homebrew
      community.general.homebrew_cask:
        name: "{{ item }}"
        state: present
      with_items:
        # messengers
        - discord
        - skype
        - slack
        - telegram
        # notes
        - drawio
        - obsidian
        # VPNs
        - nordvpn
        # torrent
        - qbittorrent
        # apps launchers
        - raycast
        # password managers
        - nordpass
        # music
        - spotify
      ignore_errors: true

    - name: Install Rust
      ansible.builtin.shell:
        cmd: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

    - name: Install Julia
      community.general.homebrew:
        name: "{{ item }}"
        state: present
      with_items:
        - julia

    - name: Install Node
      community.general.homebrew:
        name: "{{ item }}"
        state: present
      with_items:
        - node
        - nvm

    - name: Install dev tools via homebrew
      community.general.homebrew:
        name: "{{ item }}"
        state: present
      with_items:
        - act # runs GitHub Actions locally
        - actionlint # static checker for GitHub Actions workflow files
        - ansible-language-server # language Server for Ansible Files
        - atuin # TUI shell history for zsh
        - bat # cat with syntax highlighting and Git integration
        - btop # resource monitor
        - commitizen # defines a standard way of committing rules
        - curl # query HTTP, HTTPS or FTP server
        - d2 # modern diagram scripting language that turns text to diagrams
        - direnv # load/unload environment variables based on $PWD
        - dotdrop # dotfiles manager
        # - dotenv-linter  # lightning-fast linter for .env files written in Rust
        - dhall-lsp-server # language Server Protocol (LSP) server for Dhall
        - dsq # CLI tool for running SQL queries against JSON, CSV, Excel, Parquet
        - duckdb # embeddable SQL OLAP Database Management System
        - exa # modern replacement for 'ls'
        - fd # simple, fast and user-friendly alternative to find
        - ffmpeg # play, record, convert, and stream audio and video
        - ffmpegthumbnailer # create thumbnails for your video files
        - fselect # find files with sql-like queries
        - fzf # command-line fuzzy finder written in go
        - gcc # gnu compiler collection
        - gh # github command-line tool
        - git-delta # syntax-highlighting pager for git and diff output
        - graphviz # graph visualization software from at&t and bell labs
        - hadolint # smarter Dockerfile linter to validate best practices
        - helix # post-modern modal text editor
        - helm # kubernetes package manager
        - jq # lightweight and flexible command-line json processor
        - k9s # kubernetes cli to manage your clusters in style!
        - kubernetes-cli # kubernetes command-line interface
        - koekeishiya/formulae/skhd # hotkey daemon for macOS
        - koekeishiya/formulae/yabai # tiling window manager for macOS
        - lazydocker # lazier way to manage everything docker
        - lazygit # simple terminal ui for git commands
        - lf # terminal file manager
        - minikube # run a kubernetes cluster locally
        - nap # code snippets in your terminal
        - navi # interactive cheatsheet tool for the command-line
        - neofetch # fast, highly customisable system info script
        - poppler # pdf rendering library (based on the xpdf-3.0 code base)
        - pyenv # python version management
        - pyenv-virtualenv # pyenv plugin to manage virtualenv
        - ripgrep # search tool like grep and the silver searcher
        - starship # cross-shell prompt for astronauts
        - shellcheck # static analysis and lint tool, for (ba)sh scripts
        - shfmt # autoformat shell script source code
        - texlab # implementation of the Language Server Protocol for LaTeX
        - thefuck # programmatically correct mistyped console commands
        - tree # display directories as trees (with optional color/html output)
        - ttyd # command-line tool for sharing terminal over the web
        - unar # command-line unarchiving tools supporting multiple formats
        - vhs # your cli home video recorder
        - wget # internet file retriever
        - xplr # hackable, minimal, fast tui file explorer
        - yazi # blazing fast terminal file manager written in rust, based on async i/o
        - zellij # pluggable terminal workspace, with terminal multiplexer as the base feature
        - zoxide # shell extension to navigate your filesystem faster

    - name: Install CLI tools via npm
      community.general.npm:
        name: "{{ item }}"
        global: true
      with_items:
        - git-labelmaker # ddit GitHub labels from the command line

    - name: Install oh-my-zsh
      ansible.builtin.shell:
        cmd: sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
      ignore_errors: true

    - name: Install LSPs via homebrew
      community.general.homebrew:
        name: "{{ item }}"
        state: present
      with_items:
        - efm-langserver

    - name: Install LSPs via npm
      community.general.npm:
        name: "{{ item }}"
        global: true
      with_items:
        - bash-language-server
        - dockerfile-language-server-nodejs
        - vscode-langservers-extracted
        - yaml-language-server@next

    - name: Install Spicetify CLI
      ansible.builtin.shell:
        cmd: curl -fsSL https://raw.githubusercontent.com/spicetify/spicetify-cli/master/install.sh | sh

    - name: Install Spicetify Marketplace
      ansible.builtin.shell:
        cmd: curl -fsSL https://raw.githubusercontent.com/spicetify/spicetify-marketplace/main/resources/install.sh | sh
