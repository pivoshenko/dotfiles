- name: Tooling
  hosts: localhost
  vars:
    ansible_connection: local
    ansible_python_interpreter: "{{ ansible_playbook_python }}"

  tasks:
    - name: Install homebrew taps
      community.general.homebrew_tap:
        name: "{{ item }}"
        state: present
      with_items:
        - homebrew/cask-fonts

    - name: Install fonts via homebrew
      community.general.homebrew_cask:
        name: "{{ item }}"
        state: present
      with_items:
        - font-symbols-only-nerd-font

    - name: Install IDEs and terminals via homebrew
      community.general.homebrew_cask:
        name: "{{ item }}"
        state: present
      with_items:
        - dbeaver-community
        - iterm2
        - jetbrains-toolbox
        - karabiner-elements
        - visual-studio-code
        - warp

    - name: Install common apps via homebrew
      community.general.homebrew_cask:
        name: "{{ item }}"
        state: present
      with_items:
        - discord
        - nordpass
        - nordvpn
        - obsidian
        - qbittorrent
        - raycast
        - skype
        - slack
        - spotify
        - telegram
      ignore_errors: true

    - name: Install Spicetify CLI
      ansible.builtin.shell:
        cmd: curl -fsSL https://raw.githubusercontent.com/spicetify/spicetify-cli/master/install.sh | sh

    - name: Install Spicetify Marketplace
      ansible.builtin.shell:
        cmd: curl -fsSL https://raw.githubusercontent.com/spicetify/spicetify-marketplace/main/resources/install.sh | sh

    - name: Install Rust
      ansible.builtin.shell:
        cmd: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

    - name: Install Node
      community.general.homebrew:
        name: "{{ item }}"
        state: present
      with_items:
        - node
        - nvm

    - name: Install CLI tools via homebrew
      community.general.homebrew:
        name: "{{ item }}"
        state: present
      with_items:
        - act  # runs GitHub Actions locally
        - atuin  # TUI shell history for zsh
        - bat  # cat with syntax highlighting and Git integration
        - bottom  # yet another cross-platform graphical process/system monitor
        - btop  # resource monitor
        - commitizen  # defines a standard way of committing rules
        - curl  # query HTTP, HTTPS or FTP server
        - d2  # modern diagram scripting language that turns text to diagrams
        - direnv  # load/unload environment variables based on $PWD
        - dotdrop  # dotfiles manager
        - dsq  # CLI tool for running SQL queries against JSON, CSV, Excel, Parquet
        - duckdb  # embeddable SQL OLAP Database Management System
        - exa  # modern replacement for 'ls'
        - fd  # simple, fast and user-friendly alternative to find
        - ffmpeg  # play, record, convert, and stream audio and video
        - ffmpegthumbnailer  # create thumbnails for your video files
        - fzf  # command-line fuzzy finder written in go
        - gcc  # gnu compiler collection
        - gh  # github command-line tool
        - git-delta  # syntax-highlighting pager for git and diff output
        - graphviz  # graph visualization software from at&t and bell labs
        - helix  # post-modern modal text editor
        - helm  # kubernetes package manager
        - jq  # lightweight and flexible command-line json processor
        - k9s  # kubernetes cli to manage your clusters in style!
        - koekeishiya/formulae/skhd  # hotkey daemon for macOS
        - koekeishiya/formulae/yabai  # tiling window manager for macOS
        - kubernetes-cli  # kubernetes command-line interface
        - lazydocker  # lazier way to manage everything docker
        - lazygit  # simple terminal ui for git commands
        - minikube  # run a kubernetes cluster locally
        - navi  # interactive cheatsheet tool for the command-line
        - neofetch  # fast, highly customisable system info script
        - pyenv  # python version management
        - pyenv-virtualenv  # pyenv plugin to manage virtualenv
        - ripgrep  # search tool like grep and the silver searcher
        - spotify-tui  # Spotify for the terminal written in Rust
        - starship  # cross-shell prompt for astronauts
        - thefuck  # programmatically correct mistyped console commands
        - tlrc  # tldr client written in Rust
        - tree  # display directories as trees (with optional color/html output)
        - ttyd  # command-line tool for sharing terminal over the web
        - unar  # command-line unarchiving tools supporting multiple formats
        - vhs  # your cli home video recorder
        - wget  # internet file retriever
        - xplr  # hackable, minimal, fast tui file explorer
        - zoxide  # shell extension to navigate your filesystem faster

    - name: Install CLI tools via cargo
      community.general.cargo:
        name: "{{ item }}"
      with_items:
        - zellij  # pluggable terminal workspace, with terminal multiplexer as the base feature

    - name: Install CLI tools via npm
      community.general.npm:
        name: "{{ item }}"
        global: true
      with_items:
        - git-labelmaker  # edit GitHub labels from the command line

    - name: Install oh-my-zsh
      ansible.builtin.shell:
        cmd: sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
      ignore_errors: true

    - name: Install LSPs via homebrew
      community.general.homebrew:
        name: "{{ item }}"
        state: present
      with_items:
        - actionlint  # static checker for GitHub Actions workflow files
        - ansible-language-server  # language server for Ansible files
        - dhall-lsp-server  # language server Protocol (LSP) server for Dhall
        - efm-langserver  # general purpose language server
        - hadolint  # smarter Dockerfile linter to validate best practices
        - shfmt  # autoformat shell script source code
        - texlab  # implementation of the Language Server Protocol for LaTeX
        - yamlfmt  # extensible command-line tool to format YAML files

    - name: Install LSPs via npm
      community.general.npm:
        name: "{{ item }}"
        global: true
      with_items:
        - bash-language-server  # bash language server that brings an IDE-like experience for bash scripts to most editors
        - bibtex-tidy  # cleaner and Formatter for BibTeX files
        - dockerfile-language-server-nodejs  # a language server for Dockerfiles powered by Node.js
        - editorconfig-checker  # tool to verify that your files are in harmony with your .editorconfig
        - graphql-language-service-cli  # interface for building GraphQL language services for IDEs
        - graphql-language-service-server  # interface for building GraphQL language services for IDEs
        - graphql-schema-linter  #  a command line tool to validate GraphQL schema definitions
        - vscode-langservers-extracted  # HTML/CSS/JSON/ESLint language servers
        - yaml-language-server@next  # language server for YAML Files

    - name: Install LSPs via cargo
      community.general.cargo:
        name: "{{ item }}"
      with_items:
        - taplo-cli  # TOML toolkit written in Rust
