cversion: 2
lint-debounce: 1s
root-markers:
  - .git/
  - .github/
  - Cargo.toml
  - package.json
  - pyproject.toml

tools:
  codespell: &codespell
    prefix: codespell
    lint-command: "codespell"
    lint-formats:
      - "%f:%l: %m"
    root-markers:
      - pyproject.toml

  bash-shfmt: &bash-shfmt
    prefix: shfmt
    format-command: "shfmt -ci -s -bn"
    format-stdin: true

  dockerfile-hadolint: &dockerfile-hadolint
    prefix: hadolint
    lint-command: "hadolint --no-color"
    lint-formats:
      - "%f:%l DL%n %tnfo: %m"
      - "%f:%l DL%n %tarning: %m"
      - "%f:%l DL%n %trror: %m"

  env-dotenv-linter: &env-dotenv-linter
    prefix: dotenv-linter
    lint-command: "dotenv-linter --no-color --not-check-updates -q"
    lint-formats:
      - "%f:%l %m"

  git-commit-gitlint: &git-commit-gitlint
    prefix: gitlint
    lint-command: "gitlint --ignore B6"
    lint-stdin: true
    lint-formats:
      - '%l: %m: "%r"'
      - "%l: %m"

  git-commit-commitizen: &git-commit-commitizen
    prefix: commitizen
    lint-command: "cz check --commit-msg-file"
    lint-formats:
      - "%m"

  sql-sqlfluff: &sql-sqlfluff
    prefix: sqlfluff
    lint-command: "sqlfluff lint --format github-annotation-native --annotation-level warning --nocolor --disable-progress-bar ${INPUT}"
    lint-stdin: false
    lint-formats:
      - "::%totice title=SQLFluff,file=%f,line=%l,col=%c::%m"
      - "::%tarning title=SQLFluff,file=%f,line=%l,col=%c::%m"
      - "::%trror title=SQLFluff,file=%f,line=%l,col=%c::%m"
    format-command: "sqlfluff fix --nocolor --disable-progress-bar -"
    format-stdin: true

  yaml-actionlint: &yaml-actionlint
    prefix: actionlint
    lint-command: "zsh -c \"[[ '${INPUT}' =~ \\\\.github/workflows/ ]]\" && actionlint -oneline -no-color -"
    lint-stdin: true
    lint-formats:
      - "%f:%l:%c: %m"
    root-markers:
      - .github

  yaml-ansible-lint: &yaml-ansible-lint
    prefix: ansible-lint
    lint-command: "ansible-lint -f pep8 -q"
    lint-formats:
      - "%f:%l: %m"
    root-markers:
      - .ansible-lint

  yaml-yamllint: &yaml-yamllint
    prefix: yamllint
    lint-command: "yamllint --strict --format parsable ${INPUT}"
    lint-stdin: false
    lint-formats:
      - "%f:%l:%c: [%t%*[a-z]] %m"
    env:
      - "PYTHONIOENCODING=UTF-8"

  yaml-yamlfmt: &yaml-yamlfmt
    prefix: yamlfmt
    format-command: "yamlfmt -in"
    format-stdin: true

languages:
  bash:
    - <<: *bash-shfmt

  dockerfile:
    - <<: *dockerfile-hadolint

  env:
    - <<: *env-dotenv-linter

  git-commit:
    - <<: *git-commit-gitlint
    - <<: *git-commit-commitizen

  sql:
    - <<: *sql-sqlfluff

  yaml:
    - <<: *yaml-actionlint
    - <<: *yaml-ansible-lint
    - <<: *yaml-yamllint
    - <<: *yaml-yamlfmt
