cversion: 2
lint-debounce: 1s
root-markers:
  - .git/
  - package.json
  - pyproject.toml
  - Cargo.toml

tools:
  # all-purpose tools
  codespell: &codespell
    prefix: codespell
    lint-command: "codespell"
    lint-formats:
      - "%f:%l: %m"
    root-markers:
      - pyproject.toml

  cspell: &cspell
    prefix: cspell
    lint-command: "cspell lint --no-progress --no-summary --no-color ${INPUT}"
    lint-formats:
      - "%f:%l:%c - %m"
      - "%f:%l:%c %m"
    root-markers:
      - package.json
      - .cspell.json
      - cspell.json
      - .cSpell.json
      - cSpell.json
      - cspell.config.js
      - cspell.config.cjs
      - cspell.config.json
      - cspell.config.yaml
      - cspell.config.yml
      - cspell.yaml
      - cspell.yml

  editorconfig-checker: &editorconfig-checker
    prefix: editorconfig-checker
    lint-command: "editorconfig-checker -no-color test.ini | grep : | awk '{$1=$1};1' | awk '{if(NR>1)print}' -"
    lint-stdin: true
    lint-formats:
      - "%l: %m"
    root-markers:
      - .editorconfig

  # language specific tools
  bash-shfmt: &bash-shfmt
    prefix: shfmt
    format-command: "shfmt -ci -s -bn"
    format-stdin: true

  bash-shellcheck: &bash-shellcheck
    prefix: shellcheck
    lint-command: "shellcheck -f gcc -x"
    lint-source: "shellcheck"
    lint-formats:
      - "%f:%l:%c: %trror: %m"
      - "%f:%l:%c: %tarning: %m"
      - "%f:%l:%c: %tote: %m"

  dockerfile-hadolint: &dockerfile-hadolint
    prefix: hadolint
    lint-command: "hadolint"
    lint-formats:
      - "%f:%l %m"

  env-dotenv-linter: &env-dotenv-linter
    prefix: dotenv-linter
    lint-command: "dotenv-linter lint"
    lint-formats:
      - "%f:%l %m"

  git-commit-gitlint: &git-commit-gitlint
    prefix: gitlint
    lint-command: "gitlint"
    lint-stdin: true
    lint-formats:
      - '%l: %m: "%r"'
      - "%l: %m"

  graphql-graphql-schema-linter: &graphql-graphql-schema-linter
    prefix: graphql-schema-linter
    lint-command: "graphql-schema-linter  -f compact"
    lint-formats:
      - "%f:%l:%c %m"

  python-black: &python-black
    prefix: black
    format-command: "black --quiet -"
    format-stdin: true

  python-isort: &python-isort
    prefix: isort
    format-command: "isort --quiet -"
    format-stdin: true

  python-mypy: &python-mypy
    prefix: mypy
    lint-command: "mypy --show-column-numbers"
    lint-formats:
      - "%f:%l:%c: %trror: %m"
      - "%f:%l:%c: %tarning: %m"
      - "%f:%l:%c: %tote: %m"

  yaml-actionlint: &yaml-actionlint
    prefix: actionlint
    lint-command: "zsh -c \"[[ '${INPUT}' =~ \\\\.github/workflows/ ]]\" && actionlint -oneline -no-color -"
    lint-stdin: true
    lint-formats:
      - "%f:%l:%c: %m"
    root-markers:
      - .github

  yaml-ansible-lint: &yaml-ansible-lint
    lint-command: "ansible-lint -f pep8 -q"
    lint-formats:
      - "%f:%l: %m"
    root-markers:
      - .ansible-lint

  yaml-yamllint-lint: &yaml-yamllint-lint
    prefix: yamllint
    lint-command: "yamllint --strict --format parsable ${INPUT}"
    lint-stdin: false
    lint-formats:
      - "%f:%l:%c: [%t%*[a-z]] %m"
    env:
      - "PYTHONIOENCODING=UTF-8"

languages:
  =:
    # TODO cspell requires further investigation and configuration 
    # - <<: *cspell
    - <<: *codespell

  bash:
    - <<: *bash-shfmt
    - <<: *bash-shellcheck

  dockerfile:
    - <<: *dockerfile-hadolint

  env:
    - <<: *env-dotenv-linter

  git-commit:
    - <<: *git-commit-gitlint

  graphql:
    - <<: *graphql-graphql-schema-linter

  python:
    - <<: *python-mypy

  yaml:
    - <<: *yaml-actionlint
    - <<: *yaml-ansible-lint
    - <<: *yaml-yamllint-lint
