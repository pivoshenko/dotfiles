# find files based on the name using `fzf` & `fd` and opens them using `helix` editor
_fd_fzf_hx_find_files () {
  fd --type f --type l \
  --hidden \
  --follow \
  --exclude .git \
  --exclude ".svn" \
  --exclude ".hg" \
  --exclude "CVS" \
  --exclude ".DS_Store" \
  --exclude "node_modules" \
  --exclude ".pytest_cache" \
  --exclude ".mypy_cache" \
  --exclude ".ropeproject" \
  --exclude ".hypothesis" \
  --exclude ".ruff_cache" \
  --exclude ".ipynb_checkpoints" \
  --exclude "__pycache__" \
  --exclude ".cache" \
  --exclude ".idea" \
  --exclude ".venv" \
  --exclude "venv" \
  --exclude ".coverage" \
  --exclude "*.py[co]" \
  --exclude "htmlcoverage" \
  --exclude "docs/build" \
  --exclude .ipynb_checkpoints |
    fzf --preview 'bat -n --color=always {}' \
    --height 50% -1 \
    --reverse \
    --preview-window='right:wrap' \
    --inline-info \
    --bind 'enter:become(hx {1})'
}
zle -N _fd_fzf_hx_find_files

# find files based on the content/keywords using `fzf` and opens them using `helix` editor
_fzf_hx_find_in_files () {
  rg --color=always --line-number --no-heading --smart-case "${*:-}" |
    fzf --ansi \
    --delimiter : \
    --preview 'bat --color=always {1} --highlight-line {2}' \
    --height 50% -1 \
    --reverse \
    --preview-window='right:wrap,+{2}+3/3,~3' \
    --inline-info \
    --bind 'enter:become(hx {1} +{2})'
}
zle -N _fzf_hx_find_in_files
