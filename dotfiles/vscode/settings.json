{
  // =============================================================================================
  // UI
  // =============================================================================================

  // theme
  "catppuccin.accentColor": "green",

  // icons
  "workbench.iconTheme": "eq-material-theme-icons-ocean",
  "workbench.productIconTheme": "fluent-icons",

  // editor
  "editor.lineNumbers": "relative",
  "editor.minimap.enabled": false,
  "editor.renderWhitespace": "all",
  "editor.rulers": [100],
  "editor.inlineSuggest.showToolbar": "always",
  "editor.acceptSuggestionOnEnter": "on",
  "editor.accessibilitySupport": "off",
  "editor.guides.bracketPairs": true,
  "editor.inlineSuggest.enabled": true,
  "editor.snippetSuggestions": "top",
  "editor.suggest.preview": true,
  "editor.suggest.showMethods": true,
  "editor.suggestSelection": "first",
  "editor.scrollbar.horizontal": "hidden",
  "editor.scrollbar.vertical": "hidden",
  "editor.scrollbar.verticalScrollbarSize": 0,
  "editor.codeLens": true,

  // search bar
  "search.defaultViewMode": "tree",

  // main editor
  "workbench.statusBar.visible": false,
  "workbench.layoutControl.enabled": false,
  "workbench.preferredDarkColorTheme": "Catppuccin Mocha",
  "workbench.preferredHighContrastColorTheme": "Catppuccin Mocha",
  "workbench.colorTheme": "Catppuccin Mocha",
  "workbench.preferredHighContrastLightColorTheme": "Catppuccin Latte",
  "workbench.preferredLightColorTheme": "Catppuccin Latte",
  "workbench.sideBar.location": "right",
  "workbench.tips.enabled": false,
  "workbench.editor.labelFormat": "short",
  "workbench.editor.pinnedTabSizing": "compact",
  "workbench.editor.decorations.badges": false,
  "workbench.editor.decorations.colors": false,
  "workbench.editor.enablePreview": false,

  // window
  "window.commandCenter": false,
  "window.titleBarStyle": "native",
  "window.customTitleBarVisibility": "never",
  "window.autoDetectColorScheme": true,

  // zen mode
  "zenMode.hideLineNumbers": false,

  // =============================================================================================
  // APC
  // =============================================================================================

  "apc.electron": {
    "frame": false, // removes the title bar
    "transparent": true, // removes white line from the top
    "titleBarStyle": "hidden",
    "titleBarOverlay": {
      "height": 35 // icons and text has the same centring in the title bar
    }
  },
  "apc.stylesheet": {
    ".monaco-toolbar": {
      "visible": "hidden !important",
      "display": "none !important"
    }
  },
  "apc.activityBar": {
    "position": "bottom",
    "hideSettings": true,
    "size": 28
  },

  // =============================================================================================
  // Fonts
  // =============================================================================================

  "debug.console.fontFamily": "JetBrainsMono Nerd Font",

  "editor.codeLensFontFamily": "JetBrainsMono Nerd Font Mono",
  "editor.fontFamily": "JetBrainsMono Nerd Font",
  "editor.inlayHints.fontFamily": "JetBrainsMono Nerd Font Mono",
  "editor.inlineSuggest.fontFamily": "JetBrainsMono Nerd Font",

  "terminal.integrated.fontFamily": "JetBrainsMono Nerd Font",

  "notebook.output.fontFamily": "JetBrainsMono Nerd Font",

  "debug.console.fontSize": 14,

  "scm.inputFontSize": 14,

  "editor.fontSize": 14,
  "editor.fontLigatures": true,

  "terminal.integrated.fontSize": 14,
  "terminal.integrated.fontWeight": "normal",

  // =============================================================================================
  // Core
  // =============================================================================================

  "files.autoSave": "afterDelay",

  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,

  "workbench.settings.editor": "json",

  // =============================================================================================
  // Terminal
  // =============================================================================================

  "terminal.explorerKind": "external",
  "terminal.external.osxExec": "iTerm.app",
  "terminal.integrated.allowMnemonics": true,
  "terminal.integrated.defaultProfile.osx": "zsh",
  "terminal.integrated.drawBoldTextInBrightColors": false,
  "terminal.integrated.gpuAcceleration": "on",
  "terminal.integrated.inheritEnv": true,
  "terminal.integrated.lineHeight": 1.1,
  "terminal.integrated.profiles.osx": {
    "zsh": {
      "args": ["-l", "-i"],
      "path": "/bin/zsh"
    }
  },

  // =============================================================================================
  // Extensions
  // =============================================================================================

  // git
  "git.autofetch": true,
  "git.confirmSync": false,
  "git.enableSmartCommit": true,
  "git.ignoreLegacyWarning": true,
  "diffEditor.codeLens": true,

  // GitHub
  "github.gitAuthentication": false,
  "github.gitProtocol": "ssh",
  "githubPullRequests.createOnPublishBranch": "never",
  "githubPullRequests.fileListLayout": "tree",

  // projects
  "projectManager.git.baseFolders": ["~/Development"],

  // Python
  "autoDocstring.docstringFormat": "numpy",

  "python.analysis.addImport.exactMatchOnly": true,
  "python.analysis.autoFormatStrings": true,
  "python.analysis.autoImportCompletions": true,
  "python.analysis.completeFunctionParens": true,
  "python.analysis.extraPaths": [],
  "python.analysis.inlayHints.functionReturnTypes": true,
  "python.analysis.inlayHints.pytestParameters": true,
  "python.analysis.inlayHints.variableTypes": true,
  "python.analysis.typeCheckingMode": "off",
  "python.defaultInterpreterPath": "",
  "python.experiments.enabled": false,
  "python.languageServer": "Pylance",
  "python.testing.pytestEnabled": true,
  "python.testing.unittestArgs": [],
  "pythonTestExplorer.testFramework": "pytest",

  // Jupyter
  "notebook.lineNumbers": "on",
  "workbench.editorAssociations": {
    "*.ipynb": "jupyter-notebook"
  },

  // YAML
  "redhat.telemetry.enabled": false,

  // Rust
  "rust-analyzer.hover.actions.references.enable": true,

  // Shell
  "shellformat.useEditorConfig": true,

  // SQL
  "sqlfluff.env.useDotEnvFile": true,

  // TOML
  "evenBetterToml.formatter.allowedBlankLines": 1,
  "evenBetterToml.formatter.arrayAutoCollapse": true,
  "evenBetterToml.formatter.arrayTrailingComma": false,
  "evenBetterToml.formatter.columnWidth": 120,
  "evenBetterToml.formatter.reorderArrays": false,
  "evenBetterToml.formatter.reorderKeys": false,

  // Lua
  "Lua.codeLens.enable": true,
  "Lua.hint.enable": true,
  "Lua.hint.setType": true,

  // =============================================================================================
  // Files
  // =============================================================================================

  "files.associations": {
    ".babelrc": "jsonc",
    ".eslintrc": "jsonc",
    "*.pyi": "python",
    "*.bats": "shellscript"
  },

  "files.exclude": {
    "**/.git": true,
    "**/.svn": true,
    "**/.hg": true,
    "**/CVS": true,
    "**/.DS_Store": true,
    "**/Thumbs.db": true,
    "**/node_modules": true,
    "**/.todo.md": true,
    "**/.pytest_cache": true,
    "**/.mypy_cache": true,
    "**/.ropeproject": true,
    "**/__pycache__": true,
    "**/.cache": true,
    "**/.idea": true,
    "**/.venv": true,
    "**/.coverage": true,
    "**/*.py[co]": true,
    "**/htmlcoverage": true,
    "**/docs/build": true
  },

  // =============================================================================================
  // Languages
  // =============================================================================================

  "[ansible]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[dotenv]": {
    "editor.defaultFormatter": "lkrms.inifmt"
  },
  "[ignore]": {
    "editor.defaultFormatter": "lkrms.inifmt"
  },
  "[ini]": {
    "editor.defaultFormatter": "lkrms.inifmt"
  },
  "[jinja-sql]": {
    "editor.defaultFormatter": "dorzey.vscode-sqlfluff"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[lua]": {
    "editor.defaultFormatter": "sumneko.lua"
  },
  "[markdown]": {
    "editor.defaultFormatter": "yzhang.markdown-all-in-one"
  },
  "[plaintext]": {
    "editor.defaultFormatter": "lkrms.inifmt"
  },
  "[properties]": {
    "editor.defaultFormatter": "lkrms.inifmt"
  },
  "[python]": {
    "editor.defaultFormatter": "charliermarsh.ruff"
  },
  "[shellscript]": {
    "editor.defaultFormatter": "foxundermoon.shell-format"
  },
  "[toml]": {
    "editor.defaultFormatter": "tamasfe.even-better-toml"
  },
  "[yaml]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },

  // =============================================================================================
  // Keybindings
  // =============================================================================================

  // helix editor
  "dance.menus": {
    "object": {
      "title": "Select object...",
      "items": {
        "w": {
          "command": "dance.seek.object",
          "args": [
            {
              "input": "[\\p{L}_\\d]+(?<after>[^\\S\\n]+)"
            }
          ],
          "text": "word"
        },
        "W": {
          "command": "dance.seek.object",
          "args": [
            {
              "input": "[\\S]+(?<after>[^\\S\\n]+)"
            }
          ],
          "text": "WORD"
        },
        "s": {
          "command": "dance.seek.object",
          "args": [
            {
              "input": "(?#predefined=sentence)"
            }
          ],
          "text": "sentence"
        },
        "p": {
          "command": "dance.seek.object",
          "args": [
            {
              "input": "(?#predefined=paragraph)"
            }
          ],
          "text": "paragraph"
        },
        " ": {
          "command": "dance.seek.object",
          "args": [
            {
              "input": "(?<before>[\\s]+)[^\\S\\n]+(?<after>[\\s]+)"
            }
          ],
          "text": "whitespaces"
        },
        "i": {
          "command": "dance.seek.object",
          "args": [
            {
              "input": "(?#predefined=indent)"
            }
          ],
          "text": "indent"
        },
        "()": {
          "command": "dance.seek.object",
          "args": [
            {
              "input": "\\((?#inner)\\)"
            }
          ],
          "text": "parenthesis block"
        },
        "{}": {
          "command": "dance.seek.object",
          "args": [
            {
              "input": "\\{(?#inner)\\}"
            }
          ],
          "text": "braces block"
        },
        "[]": {
          "command": "dance.seek.object",
          "args": [
            {
              "input": "\\[(?#inner)\\]"
            }
          ],
          "text": "brackets block"
        },
        "<>": {
          "command": "dance.seek.object",
          "args": [
            {
              "input": "<(?#inner)>"
            }
          ],
          "text": "angle block"
        },
        "\"": {
          "command": "dance.seek.object",
          "args": [
            {
              "input": "(?#noescape)\"(?#inner)(?#noescape)\""
            }
          ],
          "text": "double quote string"
        },
        "'": {
          "command": "dance.seek.object",
          "args": [
            {
              "input": "(?#noescape)'(?#inner)(?#noescape)'"
            }
          ],
          "text": "single quote string"
        },
        "`": {
          "command": "dance.seek.object",
          "args": [
            {
              "input": "(?#noescape)`(?#inner)(?#noescape)`"
            }
          ],
          "text": "grave quote string"
        },
        "c": {
          "command": "dance.seek.object",
          "text": "custom object desc"
        }
      }
    },
    "match": {
      "title": "Match...",
      "items": {
        "m": {
          "text": "Goto matching bracket",
          "command": "dance.seek.enclosing"
        },
        "s": {
          "text": "Surround add",
          "command": "dance.match.surround"
        },
        "r": {
          "text": "Surround replace",
          "command": "dance.match.surroundreplace"
        },
        "d": {
          "text": "Surround delete",
          "command": "dance.match.surrounddelete"
        },
        "a": {
          "text": "Select around object",
          "command": "dance.seek.askObject"
        },
        "i": {
          "text": "Select inside object",
          "command": "dance.seek.askObject.inner"
        }
      }
    },
    "space": {
      "title": "Space",
      "items": {
        "f": {
          "text": "Open file picker",
          "command": "workbench.action.quickOpen"
        },
        "b": {
          "text": "Open buffer picker",
          "command": "workbench.action.showAllEditors"
        },
        "s": {
          "text": "Open symbol picker",
          "command": "workbench.action.gotoSymbol"
        },
        "a": {
          "text": "Perform code action",
          "command": "editor.action.quickFix"
        },
        "d": {
          "text": "Start debug",
          "command": "workbench.action.debug.start"
        },
        "w": {
          "text": "Window",
          "command": "dance.window.windowMenu"
        },
        "y": {
          "text": "Join and yank selections to clipboard",
          "command": "dance.selections.saveText",
          "args": [
            {
              "register": ""
            }
          ]
        },
        "p": {
          "text": "Paste clipboard after selections",
          "command": "dance.edit.insert",
          "args": [
            {
              "handleNewLine": true,
              "where": "end"
            }
          ]
        },
        "P​": {
          "text": "Paste clipboard before selections",
          "command": "dance.edit.insert",
          "args": [
            {
              "handleNewLine": true,
              "where": "start"
            }
          ]
        },
        "/": {
          "text": "Global Search in workspace folder",
          "command": "workbench.action.findInFiles"
        },
        "k": {
          "text": "Show docs for item under cursor (hover)",
          "command": "editor.action.showHover"
        },
        "r": {
          "text": "Rename symbol",
          "command": "editor.action.rename"
        },
        "!": {
          "text": "Which key",
          "command": "whichkey.show"
        },
        "?": {
          "text": "Open command palette",
          "command": "workbench.action.showCommands"
        }
      }
    },
    "goto": {
      "title": "Go...",
      "items": {
        "g": {
          "text": "to first line",
          "command": "dance.select.lineStart",
          "args": [
            {
              "count": 1
            }
          ]
        },
        "e": {
          "text": "to last char of last line",
          "command": "dance.select.lineEnd",
          "args": [
            {
              "count": 2147483647
            }
          ]
        },
        "f": {
          "text": "to file whose name is selected",
          "command": "dance.selections.open"
        },
        "h": {
          "text": "to line start",
          "command": "dance.select.lineStart"
        },
        "l": {
          "text": "to line end",
          "command": "dance.select.lineEnd"
        },
        "s": {
          "text": "to non-blank line start",
          "command": "dance.select.lineStart",
          "args": [
            {
              "skipBlank": true
            }
          ]
        },
        "t": {
          "text": "to first displayed line",
          "command": "dance.select.firstVisibleLine"
        },
        "c": {
          "text": "to middle displayed line",
          "command": "dance.select.middleVisibleLine"
        },
        "b": {
          "text": "to last displayed line",
          "command": "dance.select.lastVisibleLine"
        },
        "d": {
          "text": "to definition",
          "command": "editor.action.revealDefinition"
        },
        "y": {
          "text": "to type definition",
          "command": "editor.action.goToTypeDefinition"
        },
        "r": {
          "text": "to references",
          "command": "editor.action.goToReferences"
        },
        "i": {
          "text": "to implementation",
          "command": "editor.action.goToImplementation"
        },
        "a": {
          "text": "to last accessed buffer",
          "command": "workbench.action.openPreviousRecentlyUsedEditorInGroup"
        },
        "n": {
          "text": "to next buffer",
          "command": "workbench.action.nextEditor"
        },
        "p": {
          "text": "to previous buffer",
          "command": "workbench.action.previousEditor"
        },
        ".": {
          "text": "to last buffer modification position",
          "command": "dance.selections.restore",
          "args": [
            {
              "register": " insert"
            }
          ]
        }
      }
    },
    "window": {
      "title": "Window",
      "items": {
        "w": {
          "text": "Goto next window",
          "command": "workbench.action.nextEditor"
        },
        "s": {
          "text": "Horizontal bottom split",
          "command": "workbench.action.splitEditorDown"
        },
        "v": {
          "text": "Vertical right split",
          "command": "workbench.action.splitEditor"
        },
        "t": {
          "text": "Transpose splits",
          "command": "workbench.action.toggleEditorGroupLayout"
        },
        "q": {
          "text": "Close window",
          "command": "workbench.action.closeActiveEditor"
        },
        "o": {
          "text": "Close all other windows (Current window only)",
          "command": "workbench.action.closeOtherEditors"
        },
        "h": {
          "text": "Jump to the split on the left",
          "command": "workbench.action.focusLeftGroup"
        },
        "j": {
          "text": "Jump to the split below",
          "command": "workbench.action.focusBelowGroup"
        },
        "k": {
          "text": "Jump to the split above",
          "command": "workbench.action.focusAboveGroup"
        },
        "l": {
          "text": "Jump to the split to the right",
          "command": "workbench.action.focusRightGroup"
        },
        "H": {
          "text": "Swap with the split to the left",
          "command": "workbench.action.moveActiveEditorGroupLeft"
        },
        "J": {
          "text": "Swap with the split below",
          "command": "workbench.action.moveActiveEditorGroupDown"
        },
        "K": {
          "text": "Swap with the split above",
          "command": "workbench.action.moveActiveEditorGroupUp"
        },
        "L": {
          "text": "Swap with the split to the right",
          "command": "workbench.action.moveActiveEditorGroupRight"
        }
      }
    },
    "view": {
      "title": "View",
      "items": {
        "zc": {
          "text": "center cursor vertically",
          "command": "dance.view.line",
          "args": [
            {
              "at": "center"
            }
          ]
        },
        "t": {
          "text": "cursor on top",
          "command": "dance.view.line",
          "args": [
            {
              "at": "top"
            }
          ]
        },
        "b": {
          "text": "cursor on bottom",
          "command": "dance.view.line",
          "args": [
            {
              "at": "bottom"
            }
          ]
        },
        "j": {
          "text": "scroll down",
          "command": "editorScroll",
          "args": [
            {
              "to": "down",
              "by": "line",
              "revealCursor": true
            }
          ]
        },
        "k": {
          "text": "scroll up",
          "command": "editorScroll",
          "args": [
            {
              "to": "up",
              "by": "line",
              "revealCursor": true
            }
          ]
        }
      }
    }
  },

  // which key
  "whichkey.bindings": [
    {
      "key": " ",
      "name": "Commands",
      "type": "command",
      "command": "workbench.action.showCommands"
    },
    {
      "key": "\t",
      "name": "Last editor",
      "type": "commands",
      "commands": [
        "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
        "list.select"
      ]
    },
    {
      "key": "?",
      "name": "Search keybindings",
      "type": "command",
      "command": "whichkey.searchBindings"
    },
    {
      "key": ".",
      "name": "Repeat most recent action",
      "type": "command",
      "command": "whichkey.repeatMostRecent"
    },
    {
      "key": "b",
      "name": "+Buffers/Editors",
      "type": "bindings",
      "bindings": [
        {
          "key": "b",
          "name": "Show all buffers/editors",
          "type": "command",
          "command": "workbench.action.showAllEditors"
        },
        {
          "key": "B",
          "name": "Show all buffers/editors in active group",
          "type": "command",
          "command": "workbench.action.showEditorsInActiveGroup"
        },
        {
          "key": "d",
          "name": "Close active editor",
          "type": "command",
          "command": "workbench.action.closeActiveEditor"
        },
        {
          "key": "H",
          "name": "Move editor into left group",
          "type": "command",
          "command": "workbench.action.moveEditorToLeftGroup"
        },
        {
          "key": "J",
          "name": "Move editor into below group",
          "type": "command",
          "command": "workbench.action.moveEditorToBelowGroup"
        },
        {
          "key": "K",
          "name": "Move editor into above group",
          "type": "command",
          "command": "workbench.action.moveEditorToAboveGroup"
        },
        {
          "key": "L",
          "name": "Move editor into right group",
          "type": "command",
          "command": "workbench.action.moveEditorToRightGroup"
        },
        {
          "key": "M",
          "name": "Close other editors",
          "type": "command",
          "command": "workbench.action.closeOtherEditors"
        },
        {
          "key": "n",
          "name": "Next editor",
          "type": "command",
          "command": "workbench.action.nextEditor"
        },
        {
          "key": "p",
          "name": "Previous editor",
          "type": "command",
          "command": "workbench.action.previousEditor"
        },
        {
          "key": "N",
          "name": "New untitled editor",
          "type": "command",
          "command": "workbench.action.files.newUntitledFile"
        },
        {
          "key": "u",
          "name": "Reopen closed editor",
          "type": "command",
          "command": "workbench.action.reopenClosedEditor"
        },
        {
          "key": "P",
          "name": "Paste clipboard to buffer",
          "type": "commands",
          "commands": [
            "editor.action.selectAll",
            "editor.action.clipboardPasteAction"
          ]
        },
        {
          "key": "Y",
          "name": "Copy buffer to clipboard",
          "type": "commands",
          "commands": [
            "editor.action.selectAll",
            "editor.action.clipboardCopyAction",
            "cancelSelection"
          ]
        }
      ]
    },
    {
      "key": "d",
      "name": "+Debug",
      "type": "bindings",
      "bindings": [
        {
          "key": "d",
          "name": "Start debug",
          "type": "command",
          "command": "workbench.action.debug.start"
        },
        {
          "key": "D",
          "name": "Run without debugging",
          "type": "command",
          "command": "workbench.action.debug.run"
        },
        {
          "key": "S",
          "name": "Stop debug",
          "type": "command",
          "command": "workbench.action.debug.stop"
        },
        {
          "key": "c",
          "name": "Continue debug",
          "type": "command",
          "command": "workbench.action.debug.continue"
        },
        {
          "key": "p",
          "name": "Pause debug",
          "type": "command",
          "command": "workbench.action.debug.pause"
        },
        {
          "key": "R",
          "name": "Restart debug",
          "type": "command",
          "command": "workbench.action.debug.restart"
        },
        {
          "key": "i",
          "name": "Step into",
          "type": "command",
          "command": "workbench.action.debug.stepInto"
        },
        {
          "key": "s",
          "name": "Step over",
          "type": "command",
          "command": "workbench.action.debug.stepOver"
        },
        {
          "key": "o",
          "name": "Step out",
          "type": "command",
          "command": "workbench.action.debug.stepOut"
        },
        {
          "key": "b",
          "name": "Toggle breakpoint",
          "type": "command",
          "command": "editor.debug.action.toggleBreakpoint"
        },
        {
          "key": "B",
          "name": "Toggle inline breakpoint",
          "type": "command",
          "command": "editor.debug.action.toggleInlineBreakpoint"
        },
        {
          "key": "j",
          "name": "Jump to cursor",
          "type": "command",
          "command": "debug.jumpToCursor"
        },
        {
          "key": "v",
          "name": "REPL",
          "type": "command",
          "command": "workbench.debug.action.toggleRepl"
        },
        {
          "key": "w",
          "name": "Focus on watch window",
          "type": "command",
          "command": "workbench.debug.action.focusWatchView"
        },
        {
          "key": "W",
          "name": "Add to watch",
          "type": "command",
          "command": "editor.debug.action.selectionToWatch"
        }
      ]
    },
    {
      "key": "e",
      "name": "+Errors",
      "type": "bindings",
      "bindings": [
        {
          "key": ".",
          "name": "Error transient",
          "type": "command",
          "command": "whichkey.showTransient",
          "args": "whichkey.transient.error"
        },
        {
          "key": "l",
          "name": "List errors",
          "type": "command",
          "command": "workbench.actions.view.problems"
        },
        {
          "key": "N",
          "name": "Previous error",
          "type": "command",
          "command": "editor.action.marker.prev"
        },
        {
          "key": "n",
          "name": "Next error",
          "type": "command",
          "command": "editor.action.marker.next"
        },
        {
          "key": "p",
          "name": "Previous error",
          "type": "command",
          "command": "editor.action.marker.prev"
        }
      ]
    },
    {
      "key": "f",
      "name": "+File",
      "type": "bindings",
      "bindings": [
        {
          "key": "f",
          "name": "Open file/folder",
          "type": "command",
          "command": "whichkey.openFile"
        },
        {
          "key": "n",
          "name": "New Untitled",
          "type": "command",
          "command": "workbench.action.files.newUntitledFile"
        },
        {
          "key": "w",
          "name": "Open active in new window",
          "type": "command",
          "command": "workbench.action.files.showOpenedFileInNewWindow"
        },
        {
          "key": "s",
          "name": "Save file",
          "type": "command",
          "command": "workbench.action.files.save"
        },
        {
          "key": "S",
          "name": "Save all files",
          "type": "command",
          "command": "workbench.action.files.saveAll"
        },
        {
          "key": "r",
          "name": "Open recent",
          "type": "command",
          "command": "workbench.action.openRecent"
        },
        {
          "key": "R",
          "name": "Rename file",
          "type": "commands",
          "commands": [
            "workbench.files.action.showActiveFileInExplorer",
            "renameFile"
          ]
        },
        {
          "key": "t",
          "name": "Show tree/explorer view",
          "type": "command",
          "command": "workbench.view.explorer"
        },
        {
          "key": "T",
          "name": "Show active file in tree/explorer view",
          "type": "command",
          "command": "workbench.files.action.showActiveFileInExplorer"
        },
        {
          "key": "y",
          "name": "Copy path of active file",
          "type": "command",
          "command": "workbench.action.files.copyPathOfActiveFile"
        },
        {
          "key": "o",
          "name": "Open with",
          "type": "command",
          "command": "explorer.openWith"
        },
        {
          "key": "l",
          "name": "Change file language",
          "type": "command",
          "command": "workbench.action.editor.changeLanguageMode"
        },
        {
          "key": "=",
          "name": "Format file",
          "type": "command",
          "command": "editor.action.formatDocument"
        },
        {
          "key": "i",
          "name": "+Indentation",
          "type": "bindings",
          "bindings": [
            {
              "key": "i",
              "name": "Change indentation",
              "type": "command",
              "command": "changeEditorIndentation"
            },
            {
              "key": "d",
              "name": "Detect indentation",
              "type": "command",
              "command": "editor.action.detectIndentation"
            },
            {
              "key": "r",
              "name": "Reindent",
              "type": "command",
              "command": "editor.action.reindentlines"
            },
            {
              "key": "R",
              "name": "Reindent selected",
              "type": "command",
              "command": "editor.action.reindentselectedlines"
            },
            {
              "key": "t",
              "name": "Convert indentation to tabs",
              "type": "command",
              "command": "editor.action.indentationToTabs"
            },
            {
              "key": "s",
              "name": "Convert indentation to spaces",
              "type": "command",
              "command": "editor.action.indentationToSpaces"
            }
          ]
        }
      ]
    },
    {
      "key": "g",
      "name": "+Git",
      "type": "bindings",
      "bindings": [
        {
          "key": "b",
          "name": "Checkout",
          "type": "command",
          "command": "git.checkout"
        },
        {
          "key": "c",
          "name": "Commit",
          "type": "command",
          "command": "git.commit"
        },
        {
          "key": "d",
          "name": "Delete Branch",
          "type": "command",
          "command": "git.deleteBranch"
        },
        {
          "key": "f",
          "name": "Fetch",
          "type": "command",
          "command": "git.fetch"
        },
        {
          "key": "i",
          "name": "Init",
          "type": "command",
          "command": "git.init"
        },
        {
          "key": "m",
          "name": "Merge",
          "type": "command",
          "command": "git.merge"
        },
        {
          "key": "p",
          "name": "Publish",
          "type": "command",
          "command": "git.publish"
        },
        {
          "key": "s",
          "name": "Status",
          "type": "command",
          "command": "workbench.view.scm"
        },
        {
          "key": "S",
          "name": "Stage",
          "type": "command",
          "command": "git.stage"
        },
        {
          "key": "U",
          "name": "Unstage",
          "type": "command",
          "command": "git.unstage"
        }
      ]
    },
    {
      "key": "i",
      "name": "+Insert",
      "type": "bindings",
      "bindings": [
        {
          "key": "j",
          "name": "Insert line below",
          "type": "command",
          "command": "editor.action.insertLineAfter"
        },
        {
          "key": "k",
          "name": "Insert line above",
          "type": "command",
          "command": "editor.action.insertLineBefore"
        },
        {
          "key": "s",
          "name": "Insert snippet",
          "type": "command",
          "command": "editor.action.insertSnippet"
        }
      ]
    },
    {
      "key": "p",
      "name": "+Project",
      "type": "bindings",
      "bindings": [
        {
          "key": "f",
          "name": "Find file in project",
          "type": "command",
          "command": "workbench.action.quickOpen"
        },
        {
          "key": "p",
          "name": "Switch project",
          "type": "command",
          "command": "workbench.action.openRecent"
        },
        {
          "key": "t",
          "name": "Show tree/explorer view",
          "type": "command",
          "command": "workbench.view.explorer"
        }
      ]
    },
    {
      "key": "r",
      "name": "+Repeat",
      "type": "bindings",
      "bindings": [
        {
          "key": ".",
          "name": "Repeat recent actions",
          "type": "command",
          "command": "whichkey.repeatRecent"
        }
      ]
    },
    {
      "key": "s",
      "name": "+Search/Symbol",
      "type": "bindings",
      "bindings": [
        {
          "key": "e",
          "name": "Edit symbol",
          "type": "command",
          "command": "editor.action.rename"
        },
        {
          "key": "h",
          "name": "Highlight symbol transient",
          "type": "commands",
          "commands": [
            "editor.action.wordHighlight.trigger",
            "whichkey.showTransient"
          ],
          "args": [null, "whichkey.transient.symbol"]
        },
        {
          "key": "j",
          "name": "Jump to symbol in file",
          "type": "command",
          "command": "workbench.action.gotoSymbol"
        },
        {
          "key": "J",
          "name": "Jump to symbol in workspace",
          "type": "command",
          "command": "workbench.action.showAllSymbols"
        },
        {
          "key": "p",
          "name": "Search in a project",
          "type": "command",
          "command": "workbench.action.findInFiles"
        },
        {
          "key": "P",
          "name": "Search in a project with a selection",
          "type": "commands",
          "commands": [
            "editor.action.addSelectionToNextFindMatch",
            "workbench.action.findInFiles"
          ]
        },
        {
          "key": "r",
          "name": "Search all references",
          "type": "command",
          "command": "editor.action.referenceSearch.trigger"
        },
        {
          "key": "R",
          "name": "Search all references in side bar",
          "type": "command",
          "command": "references-view.find"
        },
        {
          "key": "s",
          "name": "Search in current file",
          "type": "command",
          "command": "actions.find"
        }
      ]
    },
    {
      "key": "S",
      "name": "+Show",
      "type": "bindings",
      "bindings": [
        {
          "key": "e",
          "name": "Show explorer",
          "type": "command",
          "command": "workbench.view.explorer"
        },
        {
          "key": "s",
          "name": "Show search",
          "type": "command",
          "command": "workbench.view.search"
        },
        {
          "key": "g",
          "name": "Show source control",
          "type": "command",
          "command": "workbench.view.scm"
        },
        {
          "key": "t",
          "name": "Show test",
          "type": "command",
          "command": "workbench.view.extension.test"
        },
        {
          "key": "r",
          "name": "Show remote explorer",
          "type": "command",
          "command": "workbench.view.remote"
        },
        {
          "key": "x",
          "name": "Show extensions",
          "type": "command",
          "command": "workbench.view.extensions"
        },
        {
          "key": "p",
          "name": "Show problem",
          "type": "command",
          "command": "workbench.actions.view.problems"
        },
        {
          "key": "o",
          "name": "Show output",
          "type": "command",
          "command": "workbench.action.output.toggleOutput"
        },
        {
          "key": "d",
          "name": "Show debug console",
          "type": "command",
          "command": "workbench.debug.action.toggleRepl"
        }
      ]
    },
    {
      "key": "t",
      "name": "+Toggles",
      "type": "bindings",
      "bindings": [
        {
          "key": "c",
          "name": "Toggle find case sensitive",
          "type": "command",
          "command": "toggleFindCaseSensitive"
        },
        {
          "key": "w",
          "name": "Toggle ignore trim whitespace in diff",
          "type": "command",
          "command": "toggle.diff.ignoreTrimWhitespace"
        },
        {
          "key": "W",
          "name": "Toggle word wrap",
          "type": "command",
          "command": "editor.action.toggleWordWrap"
        }
      ]
    },
    {
      "key": "T",
      "name": "+UI toggles",
      "type": "bindings",
      "bindings": [
        {
          "key": "b",
          "name": "Toggle side bar visibility",
          "type": "command",
          "command": "workbench.action.toggleSidebarVisibility"
        },
        {
          "key": "j",
          "name": "Toggle panel visibility",
          "type": "command",
          "command": "workbench.action.togglePanel"
        },
        {
          "key": "F",
          "name": "Toggle full screen",
          "type": "command",
          "command": "workbench.action.toggleFullScreen"
        },
        {
          "key": "s",
          "name": "Select theme",
          "type": "command",
          "command": "workbench.action.selectTheme"
        },
        {
          "key": "m",
          "name": "Toggle maximized panel",
          "type": "command",
          "command": "workbench.action.toggleMaximizedPanel"
        },
        {
          "key": "t",
          "name": "Toggle tool/activity bar visibility",
          "type": "command",
          "command": "workbench.action.toggleActivityBarVisibility"
        },
        {
          "key": "T",
          "name": "Toggle tab visibility",
          "type": "command",
          "command": "workbench.action.toggleTabsVisibility"
        },
        {
          "key": "z",
          "name": "Toggle zen mode",
          "type": "command",
          "command": "workbench.action.toggleZenMode"
        }
      ]
    },
    {
      "key": "w",
      "name": "+Window",
      "type": "bindings",
      "bindings": [
        {
          "key": "W",
          "name": "Focus previous editor group",
          "type": "command",
          "command": "workbench.action.focusPreviousGroup"
        },
        {
          "key": "-",
          "name": "Split editor below",
          "type": "command",
          "command": "workbench.action.splitEditorDown"
        },
        {
          "key": "/",
          "name": "Split editor right",
          "type": "command",
          "command": "workbench.action.splitEditor"
        },
        {
          "key": "s",
          "name": "Split editor below",
          "type": "command",
          "command": "workbench.action.splitEditorDown"
        },
        {
          "key": "v",
          "name": "Split editor right",
          "type": "command",
          "command": "workbench.action.splitEditor"
        },
        {
          "key": "h",
          "name": "Move editor left",
          "type": "command",
          "command": "workbench.action.focusPreviousGroup"
        },
        {
          "key": "j",
          "name": "Move editor down",
          "type": "command",
          "command": "workbench.action.focusBelowGroup"
        },
        {
          "key": "k",
          "name": "Move editor up",
          "type": "command",
          "command": "workbench.action.focusAboveGroup"
        },
        {
          "key": "l",
          "name": "Move editor right",
          "type": "command",
          "command": "workbench.action.focusNextGroup"
        },
        {
          "key": "H",
          "name": "Move editor group left",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupLeft"
        },
        {
          "key": "J",
          "name": "Move editor group down",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupDown"
        },
        {
          "key": "K",
          "name": "Move editor group up",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupUp"
        },
        {
          "key": "L",
          "name": "Move editor group right",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupRight"
        },
        {
          "key": "t",
          "name": "Toggle editor group sizes",
          "type": "command",
          "command": "workbench.action.toggleEditorWidths"
        },
        {
          "key": "m",
          "name": "Maximize editor group",
          "type": "command",
          "command": "workbench.action.minimizeOtherEditors"
        },
        {
          "key": "M",
          "name": "Maximize editor group and hide side bar",
          "type": "command",
          "command": "workbench.action.maximizeEditor"
        },
        {
          "key": "=",
          "name": "Reset editor group sizes",
          "type": "command",
          "command": "workbench.action.evenEditorWidths"
        },
        {
          "key": "z",
          "name": "Combine all editors",
          "type": "command",
          "command": "workbench.action.joinAllGroups"
        },
        {
          "key": "d",
          "name": "Close editor group",
          "type": "command",
          "command": "workbench.action.closeEditorsInGroup"
        },
        {
          "key": "x",
          "name": "Close all editor groups",
          "type": "command",
          "command": "workbench.action.closeAllGroups"
        }
      ]
    },
    {
      "key": "x",
      "name": "+Text",
      "type": "bindings",
      "bindings": [
        {
          "key": "i",
          "name": "Organize Imports",
          "type": "command",
          "command": "editor.action.organizeImports"
        },
        {
          "key": "r",
          "name": "Rename symbol",
          "type": "command",
          "command": "editor.action.rename"
        },
        {
          "key": "R",
          "name": "Refactor",
          "type": "command",
          "command": "editor.action.refactor"
        },
        {
          "key": ".",
          "name": "Quick fix",
          "type": "command",
          "command": "editor.action.quickFix"
        },
        {
          "key": "a",
          "name": "Find all references",
          "type": "command",
          "command": "editor.action.referenceSearch.trigger"
        },
        {
          "key": "u",
          "name": "To lower case",
          "type": "command",
          "command": "editor.action.transformToLowercase"
        },
        {
          "key": "U",
          "name": "To upper case",
          "type": "command",
          "command": "editor.action.transformToUppercase"
        },
        {
          "key": "J",
          "name": "Move lines down transient",
          "type": "commands",
          "commands": [
            "editor.action.moveLinesDownAction",
            "whichkey.showTransient"
          ],
          "args": [null, "whichkey.transient.lineMoving"]
        },
        {
          "key": "K",
          "name": "Move lines up transient",
          "type": "commands",
          "commands": [
            "editor.action.moveLinesUpAction",
            "whichkey.showTransient"
          ],
          "args": [null, "whichkey.transient.lineMoving"]
        },
        {
          "key": "l",
          "name": "+Lines",
          "type": "bindings",
          "bindings": [
            {
              "key": "s",
              "name": "Sort lines in ascending order",
              "type": "command",
              "command": "editor.action.sortLinesAscending"
            },
            {
              "key": "S",
              "name": "Sort lines in descending order",
              "type": "command",
              "command": "editor.action.sortLinesDescending"
            },
            {
              "key": "d",
              "name": "Duplicate lines down",
              "type": "command",
              "command": "editor.action.copyLinesDownAction"
            },
            {
              "key": "D",
              "name": "Duplicate lines up",
              "type": "command",
              "command": "editor.action.copyLinesUpAction"
            }
          ]
        },
        {
          "key": "d",
          "name": "+Delete",
          "type": "bindings",
          "bindings": [
            {
              "key": "w",
              "name": "Delete trailing whitespace",
              "type": "command",
              "command": "editor.action.trimTrailingWhitespace"
            }
          ]
        },
        {
          "key": "m",
          "name": "+Merge conflict",
          "type": "bindings",
          "bindings": [
            {
              "key": "b",
              "name": "Accept both",
              "type": "command",
              "command": "merge-conflict.accept.both"
            },
            {
              "key": "c",
              "name": "Accept current",
              "type": "command",
              "command": "merge-conflict.accept.current"
            },
            {
              "key": "i",
              "name": "Accept incoming",
              "type": "command",
              "command": "merge-conflict.accept.incoming"
            },
            {
              "key": "B",
              "name": "Accept all both",
              "type": "command",
              "command": "merge-conflict.accept.all-both"
            },
            {
              "key": "C",
              "name": "Accept all current",
              "type": "command",
              "command": "merge-conflict.accept.all-current"
            },
            {
              "key": "I",
              "name": "Accept all incoming",
              "type": "command",
              "command": "merge-conflict.accept.all-incoming"
            },
            {
              "key": "s",
              "name": "Accept selection",
              "type": "command",
              "command": "merge-conflict.accept.selection"
            },
            {
              "key": "k",
              "name": "Compare current conflict",
              "type": "command",
              "command": "merge-conflict.compare"
            },
            {
              "key": "n",
              "name": "Next Conflict",
              "type": "command",
              "command": "merge-conflict.next"
            },
            {
              "key": "N",
              "name": "Previous Conflict",
              "type": "command",
              "command": "merge-conflict.previous"
            }
          ]
        }
      ]
    },
    {
      "key": "z",
      "name": "+Zoom/Fold",
      "type": "bindings",
      "bindings": [
        {
          "key": ".",
          "name": "+Fold",
          "type": "bindings",
          "bindings": [
            {
              "key": "a",
              "name": "Toggle: around a point",
              "type": "command",
              "command": "editor.toggleFold"
            },
            {
              "key": "c",
              "name": "Close: at a point",
              "type": "command",
              "command": "editor.fold"
            },
            {
              "key": "b",
              "name": "Close: all block comments",
              "type": "command",
              "command": "editor.foldAllBlockComments"
            },
            {
              "key": "g",
              "name": "Close: all regions",
              "type": "command",
              "command": "editor.foldAllMarkerRegions"
            },
            {
              "key": "m",
              "name": "Close: all",
              "type": "command",
              "command": "editor.foldAll"
            },
            {
              "key": "o",
              "name": "Open: at a point",
              "type": "command",
              "command": "editor.unfold"
            },
            {
              "key": "O",
              "name": "Open: recursively",
              "type": "command",
              "command": "editor.unfoldRecursively"
            },
            {
              "key": "G",
              "name": "Open: all regions",
              "type": "command",
              "command": "editor.unfoldAllMarkerRegions"
            },
            {
              "key": "r",
              "name": "Open: all",
              "type": "command",
              "command": "editor.unfoldAll"
            }
          ]
        },
        {
          "key": "f",
          "name": "Frame zooming transient",
          "type": "command",
          "command": "whichkey.showTransient",
          "args": "whichkey.transient.frameZooming"
        },
        {
          "key": "x",
          "name": "Font zooming transient",
          "type": "command",
          "command": "whichkey.showTransient",
          "args": "whichkey.transient.fontZooming"
        },
        {
          "key": "i",
          "name": "Image zooming transient",
          "type": "command",
          "command": "whichkey.showTransient",
          "args": "whichkey.transient.imageZooming"
        }
      ]
    },
    {
      "key": "!",
      "name": "Show terminal",
      "type": "command",
      "command": "workbench.action.terminal.focus"
    },
    {
      "key": "/",
      "name": "Search in a project",
      "type": "command",
      "command": "workbench.action.findInFiles"
    },
    {
      "key": "*",
      "name": "Search in a project with a selection",
      "type": "commands",
      "commands": [
        "editor.action.addSelectionToNextFindMatch",
        "workbench.action.findInFiles"
      ]
    },
    {
      "key": "v",
      "name": "Smart select/expand region transient",
      "type": "commands",
      "commands": ["editor.action.smartSelect.grow", "whichkey.showTransient"],
      "args": [null, "whichkey.transient.smartExpand"]
    },
    {
      "key": "1",
      "name": "Focus 1st editor group",
      "type": "command",
      "command": "workbench.action.focusFirstEditorGroup"
    },
    {
      "key": "2",
      "name": "Focus 2nd editor group",
      "type": "command",
      "command": "workbench.action.focusSecondEditorGroup"
    },
    {
      "key": "3",
      "name": "Focus 3rd editor group",
      "type": "command",
      "command": "workbench.action.focusThirdEditorGroup"
    },
    {
      "key": "4",
      "name": "Focus 4th editor group",
      "type": "command",
      "command": "workbench.action.focusFourthEditorGroup"
    },
    {
      "key": "5",
      "name": "Focus 5th editor group",
      "type": "command",
      "command": "workbench.action.focusFifthEditorGroup"
    },
    {
      "key": "6",
      "name": "Focus 6th editor group",
      "type": "command",
      "command": "workbench.action.focusSixthEditorGroup"
    },
    {
      "key": "7",
      "name": "Focus 7th editor group",
      "type": "command",
      "command": "workbench.action.focusSeventhEditorGroup"
    },
    {
      "key": "8",
      "name": "Focus 8th editor group",
      "type": "command",
      "command": "workbench.action.focusEighthEditorGroup"
    }
  ],
}
